{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACPH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAMN,IALA,IAAgCC,EAAAN,EAAKO,SAA7BC,EAAwBF,EAAxBd,MAAOiB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACfC,EAAWC,OAAOF,EAAOG,OACzBC,EAASF,OAAOH,EAAKI,OACrBE,EAAUH,OAAOJ,EAAMK,OAEpBG,EAAI,EAAGA,EAAIL,EAAUK,IAE5B1B,EAAc0B,EAAI,EAAGD,EAAUD,EAASE,GACrCC,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEvE+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAuCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay }) \n      }\n    }, delay)\n    });\n};\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault(); \n  const { delay, step, amount } = form.elements;\n  const amountNr = Number(amount.value);\n  const stepNr = Number(step.value);\n  const delayNr = Number(delay.value);\n  \n  for (let i = 0; i < amountNr; i++) {\n\n    createPromise(i + 1, delayNr + stepNr * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\n\n// const refs = {\n//   body: document.querySelector('body'),\n//   form: document.querySelector('form.form'),\n//   delay: document.querySelector('[name=\"delay\"]'),\n//   step: document.querySelector('[name=\"step\"]'),\n//   amount: document.querySelector('[name=\"amount\"]'),\n// }\n\n// refs.form.addEventListener('click', onPromiseCreate);\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// function onPromiseCreate(e) {\n//   e.preventDefault();\n\n//   let valueDelay = Number(refs.delay.value);\n//   let step = Number(refs.step.value);\n//   let amount = Number(refs.amount.value);\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     let promiseDelay = valueDelay + step * i;\n\n//     createPromise(i, promiseDelay)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//   }\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","_elements","elements","delay1","step","amount","amountNr","Number","value","stepNr","delayNr","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.421a8ba6.js.map"}